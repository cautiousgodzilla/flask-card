_type: export
__export_format: 4
__export_date: 2021-11-29T09:33:08.280Z
__export_source: insomnia.desktop.app:v2021.6.0
resources:
  - _id: req_wrk_d68747f163f5412f8bd9c931116478747026990c
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342706
    created: 1638178342706
    url: "{{ base_url }}/api/{{ user_id }}"
    name: /api/{user_id}
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342706
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: wrk_d68747f163f5412f8bd9c93111647874
    parentId: null
    modified: 1638178302439
    created: 1638178302439
    name: Flaskcard.yaml
    description: ""
    scope: design
    _type: workspace
  - _id: req_wrk_d68747f163f5412f8bd9c931116478745ab2e402
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342702
    created: 1638178342702
    url: "{{ base_url }}/api/{{ user_id }}"
    name: /api/{user_id}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342702
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c93111647874f86aca6d
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342699
    created: 1638178342699
    url: "{{ base_url }}/api/{{ user_id }}"
    name: /api/{user_id}
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "topic": "Tamil"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1638178342699
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c93111647874afb05a0c
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342695
    created: 1638178342695
    url: "{{ base_url }}/api/{{ user_id }}"
    name: /api/{user_id}
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "topic": "Hindi"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1638178342695
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c93111647874d87079e3
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342689
    created: 1638178342689
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}"
    name: /api/{user_id}/{deck_id}
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342689
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c931116478743d3e2964
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342685
    created: 1638178342685
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}"
    name: /api/{user_id}/{deck_id}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342685
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c9311164787476975f07
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342680
    created: 1638178342680
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}"
    name: /api/{user_id}/{deck_id}
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342680
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c93111647874cbab19db
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342676
    created: 1638178342676
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}"
    name: /api/{user_id}/{deck_id}
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "front": "Cat",
          "bank": "Billi"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1638178342676
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c93111647874750c6971
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342671
    created: 1638178342671
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}/{{ card_id }}"
    name: /api/{user_id}/{deck_id}/{card_id}
    description: ""
    method: DESCRIPTION
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342671
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c931116478744a3ec3b0
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342667
    created: 1638178342667
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}/{{ card_id }}"
    name: /api/{user_id}/{deck_id}/{card_id}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342667
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c93111647874ee2e6a54
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342662
    created: 1638178342662
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}/{{ card_id }}"
    name: /api/{user_id}/{deck_id}/{card_id}
    description: ""
    method: PUT
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342662
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_d68747f163f5412f8bd9c93111647874813df954
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178342644
    created: 1638178342644
    url: "{{ base_url }}/api/{{ user_id }}/{{ deck_id }}/{{ card_id }}"
    name: /api/{user_id}/{deck_id}/{card_id}
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1638178342644
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_3a087369b4fac7da8e48a7c9e04a1f37efc9b733
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178302568
    created: 1638178302568
    name: Base Environment
    data:
      base_url: "{{ scheme }}://{{ host }}{{ base_path }}"
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1638178302568
    _type: environment
  - _id: jar_3a087369b4fac7da8e48a7c9e04a1f37efc9b733
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178302614
    created: 1638178302614
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_bce9bc4aa08e41988c9f5ceecdcb8417
    parentId: wrk_d68747f163f5412f8bd9c93111647874
    modified: 1638178353430
    created: 1638178302444
    fileName: Flaskcard.yaml
    contents: >+
      openapi: 3.0.0

      info:
        title: Flask Flashcard Project
        description: >
          <div>This is a YAML file specifying the API methods and their respective responses for the Flashcard App. 
          </div>

          <h3> Error Codes </h3> 
          <table>
            <thead>
              <th>Resource</th>
              <th>Error Code</th>
              <th>Message</th>
            </thead>
            <tbody>
            <tr>
              <td>Deck</td>
              <td>TOPIC100</td>
              <td>Topic is should be string.</td>
            </tr>
           
            <tr>
              <td>Card</td>
              <td>CARD001</td>
              <td>Front Card required and should be String </td>
            </tr>
            <tr>
              <td>Card</td>
              <td>CARD002</td>
              <td>Back Card is required and should be String </td>
            </tr>
          </tbody>
          </table>

        version: 1.0.0
      servers:
        - url: http://192.168.1.101:8080/
      paths:
        /api/{user_id}:
          description: Retrieves all the decks made by the User.
          get:
            description: Operation to Read Decks resource.
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 201
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      title: user object
                      type: object
                      properties:
                        deck_id:
                          type: object
                          example: { "topic": Tamil, "last_review":'2021-11-28'}
              '500':
                description: Internal Server Error
              '404':
                description: User not found

          put:
            description: Change Topic/Name of the deck.
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 201
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      topic:
                        type: string
                        example: Tamil
            responses:
              '200':
                description: Successfuly updated
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        topic:
                          type: string
                          example: Tamil

              '404':
                description: Deck not found
              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string

          post:
            description: Operation to create a deck.
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 201
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      topic:
                        type: string
                        example: Hindi
            responses:
              '201':
                description: Deck Successfully Created
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        topic:
                          type: string
                          example: Hindi

              '409':
                description: Deck already exist
              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
        /api/{user_id}/{deck_id}:
          description: Url to read, update and delete cards within decks.
          get:
            description: Operation to read all cards in a deck
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 201
              - in: path
                name: deck_id
                required: true
                schema:
                  type: integer
                  example: 201
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      title: deck object
                      type: object
                      properties:
                        front:
                          type: string
                          example: Cat
                        back:
                          type: string
                          example: Poone
                        interval:
                          type: integer
                          example: 1
                        time:
                          type: string
                          example: '2021-11-28'
              '500':
                description: Internal server error
              '404':
                description: Decks not found

          delete:
            description: Operation to delete the Deck.
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: deck_id
                required: true
                schema:
                  type: integer
                  example: 101
            responses:
              '200':
                description: Successfully Deleted
              '500':
                description: Internal Server Error
              '404':
                description: Deck not found


          post:
            description: Operation to create the Deck
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: deck_id
                required: true
                schema:
                  type: integer
                  example: 101
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      front:
                        type: string
                        example: Cat
                      bank:
                        type: string
                        example: Billi

            responses:
              '201':
                description: Successfully Created
                content:
                  application/json:
                    schema:
                      title: card object
                      type: object
                      properties:
                        front:
                          type: string
                          example: Cat
                        back:
                          type: string
                          example: Billi

              '500':
                description: Internal Server Error
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string

        /api/{user_id}/{deck_id}/{card_id}:
          description: Reads, Modifies and Deletes individual cards in decks.
          get:
            description: Reads individual Cards in Decks
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: deck_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: card_id
                required: true
                schema:
                  type: integer
                  example: 101
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        properties:
                          card_id:
                            type: integer
                            example: 1
                          front:
                            type: string
                            example: Cat
                          back:
                            type: string
                            example: Billi
                          time:
                            type: string
                            example: 2021-11-28
                          interval:
                            type: integer
                            example: 1
              '400':
                description: Invalid Card Id
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '500':
                description: Internal Server Error
          put:
            description: Updates individual Cards in Decks
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: deck_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: card_id
                required: true
                schema:
                  type: integer
                  example: 101
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        properties:
                          card_id:
                            type: integer
                            example: 1
                          front:
                            type: string
                            example: Cat
                          back:
                            type: string
                            example: Billi
                          time:
                            type: string
                            example: 2021-11-28
                          interval:
                            type: integer
                            example: 1
              '400':
                description: Invalid Card Id
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '500':
                description: Internal Server Error
          delete:
            description: Deletes individual Cards in Decks
            parameters:
              - in: path
                name: user_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: deck_id
                required: true
                schema:
                  type: integer
                  example: 101
              - in: path
                name: card_id
                required: true
                schema:
                  type: integer
                  example: 101
            responses:
              '200':
                description: Request Successful
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        properties:
                          card_id:
                            type: integer
                            example: 1
                          front:
                            type: string
                            example: Cat
                          back:
                            type: string
                            example: Billi
                          time:
                            type: string
                            example: 2021-11-28
                          interval:
                            type: integer
                            example: 1
              '400':
                description: Invalid Card Id
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        error_code:
                          type: string
                        error_message:
                          type: string
              '500':
                description: Internal Server Error


    contentType: yaml
    _type: api_spec
  - _id: env_env_3a087369b4fac7da8e48a7c9e04a1f37efc9b733_sub
    parentId: env_3a087369b4fac7da8e48a7c9e04a1f37efc9b733
    modified: 1638178342710
    created: 1638178342710
    name: OpenAPI env
    data:
      scheme: http
      base_path: ""
      host: 192.168.1.101:8080
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1638178342710
    _type: environment
